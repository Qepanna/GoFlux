% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/obs.win.R
\name{obs.win}
\alias{obs.win}
\title{Define measurements' window for manual identification}
\usage{
obs.win(
  inputfile,
  auxfile = NULL,
  gastype = "CO2dry_ppm",
  obs.length = NULL,
  shoulder = 120
)
}
\arguments{
\item{inputfile}{data.frame; output from import or align functions.}

\item{auxfile}{data.frame; auxiliary data frame containing the columns
\code{start.time} and \code{UniqueID}. \code{start.time} must
contain a date and be in POSIXct format. The time zone must be
the same as the POSIX.time in \code{inputfile}. The default
time zone for the import functions is "UTC". A data frame from
the Smart Chamber (LI-8200) can be used as an auxiliary file.
In that case, \code{chamID} will be used instead of \code{UniqueID},
if \code{UniqueID} cannot be found.}

\item{gastype}{character string; specifies which gas should be displayed on the
plot to manually select start time and end time of measurements.
Must be one of the following: "CO2dry_ppm", "CH4dry_ppb",
"N2Odry_ppb" or "H2O_ppm". Default is "CO2dry_ppm".}

\item{obs.length}{numerical; chamber closure time (seconds). Default is NULL.
If \code{obs.length} is not provided, a column \code{obs.length}
should be contained in \code{auxfile} or \code{inputfile}.
Alternatively, \code{obs.length} will be calculated from
\code{start.time} and \code{cham.open} or \code{end.time}
if found in \code{auxfile} or \code{inputfile}.}

\item{shoulder}{numerical; time before and after measurement in observation
window (seconds). Default is 120 seconds.}
}
\value{
a list of data frame, split by UniqueID, merging \code{inputfile},
         and \code{auxfile}. Additionally, adds some time (shoulder) before
         and after the chamber closure time to help identify the best window
         of measurement with the function \code{\link[GoFluxYourself]{click.peak}}.
}
\description{
Split gas data into one observation window per gas measurement
and create a list of data frame (one data frame per UniqueID).
}
\examples{
# How to use in multiple situations:
# Note that gastype = "CO2dry_ppm" is the default setting
library(dplyr)

## with a LGR instrument and an auxiliary file (.txt)
aux.path <- system.file("extdata", "LGR/LGR_aux.txt", package = "GoFluxYourself")
auxfile <- read.delim(aux.path) \%>\%
  mutate(start.time = as.POSIXct(start.time, tz = "UTC"))
data(LGR_imp)
LGR_ow <- obs.win(inputfile = LGR_imp, auxfile = auxfile,
                  obs.length = 180, shoulder = 60)

## with a LI-COR instrument and the Smart Chamber as auxiliary file
data(LI8200_imp)
data(LI7820_imp)
LI7820_ow <- obs.win(inputfile = LI7820_imp, auxfile = LI8200_imp, shoulder = 60)

## with the LI-6400 and no auxiliary file
data(LI6400_imp)
LI6400_ow <- obs.win(inputfile = LI6400_imp, shoulder = 0)

}
\seealso{
After defining the observation window with the function \code{obs.win()},
         Use the function \code{\link[GoFluxYourself]{click.peak.loop}} in a
         loop with \code{\link[base]{lapply}}, or use the function
         \code{\link[GoFluxYourself]{click.peak}} for a single measurement.
}
