% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goFlux.R
\name{goFlux}
\alias{goFlux}
\title{goFlux: a user-friendly GHG fluxes calculation tool}
\usage{
goFlux(
  dataframe,
  gastype,
  H2O_col = "H2O_ppm",
  prec = NULL,
  Area = NULL,
  offset = NULL,
  Vtot = NULL,
  Vcham = NULL,
  Pcham = NULL,
  Tcham = NULL,
  k.mult = 1
)
}
\arguments{
\item{dataframe}{a data.frame containing gas measurements (see \code{gastype}
below), water vapor measurements (see \code{H2O_col} below)
and the following columns: \code{UniqueID}, \code{Etime},
\code{Vtot}, \code{Area}, \code{Pcham}, \code{Tcham} and
\code{flag} (see the parameters \code{Vtot}, \code{Area},
\code{Pcham} and \code{Tcham} below for more details).}

\item{gastype}{character string; specifies which column should be used for the
flux calculations. Must be one of the following: "CO2dry_ppm",
"CH4dry_ppb", "N2Odry_ppb" or "H2O_ppm".}

\item{H2O_col}{character string; specifies which column should be used to
subtract the effect of water vapor in the chamber space.}

\item{prec}{numerical value; precision of the instruments. Units must be the
same as \code{gastype}. Default values for
\ifelse{html}{\out{CO<sub>2</sub>}}{\eqn{CO[2]}{ASCII}},
\ifelse{html}{\out{CH<sub>4</sub>}}{\eqn{CH[4]}{ASCII}},
\ifelse{html}{\out{N<sub>2</sub>O}}{\eqn{N[2]O}{ASCII}} and
\ifelse{html}{\out{H<sub>2</sub>O}}{\eqn{H[2]O}{ASCII}}
are based on the LI-COR instruments:
\itemize{
  \item \ifelse{html}{\out{CO<sub>2</sub> = 3.5 ppm;}}{\eqn{CO[2] = 3.5 ppm;}{ASCII}}
  \item \ifelse{html}{\out{CH<sub>4</sub> = 0.6 ppb;}}{\eqn{CH[4] = 0.6 ppb;}{ASCII}}
  \item \ifelse{html}{\out{N<sub>2</sub>O = 0.4 ppb;}}{\eqn{N[2]O = 0.4 ppb;}{ASCII}}
  \item \ifelse{html}{\out{H<sub>2</sub>O = 45 ppm.}}{\eqn{H[2]O = 45 ppm.}{ASCII}}
}
For other instruments, you must manually specify the precision of
the instrument. If using the ultra-portable GGA (GLA132 series):
\itemize{
  \item \ifelse{html}{\out{CO<sub>2</sub> = 0.3 ppm;}}{\eqn{CO[2] = 0.3 ppm;}{ASCII}}
  \item \ifelse{html}{\out{CH<sub>4</sub> = 0.3 ppm;}}{\eqn{CH[4] = 0.3 ppm;}{ASCII}} = 1.4 ppb;
  \item \ifelse{html}{\out{H<sub>2</sub>O = 50 ppm.}}{\eqn{H[2]O = 50 ppm.}{ASCII}}
}
If using the micro  ultra-portable GGA (GLA131 series):
\itemize{
  \item \ifelse{html}{\out{CO<sub>2</sub> = 0.35 ppm;}}{\eqn{CO[2] = 0.35 ppm;}{ASCII}}
  \item \ifelse{html}{\out{CH<sub>4</sub> = 0.9 ppb;}}{\eqn{CH[4] = 0.9 ppb;}{ASCII}}
  \item \ifelse{html}{\out{H<sub>2</sub>O = 200 ppm.}}{\eqn{H[2]O = 200 ppm.}{ASCII}}
}}

\item{Area}{numerical value; area of the soil surface inside the chamber
\ifelse{html}{\out{(cm<sup>2</sup>)}}{\eqn{(cm^2)}{ASCII}}.
Alternatively, provide the column \code{Area} in dataframe if
\code{Area} is different between samples.}

\item{offset}{(optional) numerical value; height between the soil surface and
the chamber (cm). Alternatively, provide the column \code{offset}
in dataframe if \code{offset} is different between samples.
\code{offset} is only used if \code{Vtot} is missing.}

\item{Vtot}{numerical value; total volume inside the chamber, tubes, instruments,
etc. (L). Alternatively, provide the column \code{Vtot} in dataframe
if \code{Vtot} is different between samples. If \code{Vtot} is
missing, the function will calculate it from \code{Area},
\code{Vcham} and \code{offset}.}

\item{Vcham}{(optional) numerical value; volume inside the chamber, tubes and
instruments (L). Alternatively, provide the column \code{Vcham}
in dataframe if \code{Vcham} is different between samples.
\code{Vhcam} is only used if \code{Vtot} is missing.}

\item{Pcham}{numerical value; pressure inside the chamber (kPa).
Alternatively, provide the column \code{Pcham} in dataframe if
\code{Pcham} is different between samples. If \code{Pcham} is
not provided, normal atmospheric pressure (101.325 kPa) is used.}

\item{Tcham}{numerical value; temperature inside the chamber (Celcius).
Alternatively, provide the column \code{Tcham} in dataframe if
\code{Tcham} is different between samples. If \code{Tcham} is
not provided, normal air temperature (15 \u00b0 C) is used.}

\item{k.mult}{numerical value; a multiplier for the allowed kappa-max.
kappa-max is the maximal curvature (kappa) of the non-linear
regression (Hutchinson and Mosier model) allowed for a each
flux measurement. See the functions
\code{\link[GoFluxYourself]{k.max}} and
\code{\link[GoFluxYourself]{HM.flux}}
for more information. Default setting is \code{k.mult = 1}.}
}
\value{
Returns a data frame with 24 columns: a UniqueID per measurement,
         9 columns for the linear model results (slope, C0, Ci, flux, root
         mean square error (RMSE), standard error (se), relative se (se.rel),
         \ifelse{html}{\out{r<sup>2</sup>}}{\eqn{2^2}{ASCII}}, and p-value),
         9 columns for the non-linear model results (slope, C0, Ci, flux, root
         mean square error (RMSE), standard error (se), relative se (se.rel),
         \ifelse{html}{\out{r<sup>2</sup>}}{\eqn{2^2}{ASCII}}, and kappa), as
         well as the minimal detectable flux (f.min; \code{\link[GoFluxYourself]{MDF}}),
         the precision of the instrument (prec), the flux term
         (\code{\link[GoFluxYourself]{flux.term}}), kappa-max
         (\code{\link[GoFluxYourself]{k.max}}) and the g factor
         (\code{\link[GoFluxYourself]{g.factor}}).
}
\description{
A wrapper function to calculate GHG fluxes from static chamber measurements.
Calculates linear (\code{\link[GoFluxYourself]{LM.flux}}) and non-linear fluxes
(Hutchinson and Mosier model; \code{\link[GoFluxYourself]{HM.flux}}).
}
\details{
Flux estimate units are
\ifelse{html}{\out{nmol/m<sup>2</sup>s}}{\eqn{nmol/m^{2}s}{ASCII}}
(if initial concentration is ppm, e.g. CO2dry_ppm) and
\ifelse{html}{\out{µmol/m<sup>2</sup>s}}{\eqn{µmol/m^{2}s}{ASCII}}
(if initial concentration is ppb, e.g. CH4dry_ppm).

The function \code{\link[GoFluxYourself]{k.max}} calculates the maximal
curvature (kappa) of the non-linear model (Hutchinson and Mosier;
\code{\link[GoFluxYourself]{HM.flux}}) allowed for each flux measurements.
kappa-max is calculated based on the minimal detectable flux
(\code{\link[GoFluxYourself]{MDF}}), the linear flux estimate
\code{\link[GoFluxYourself]{LM.flux}}
and the measurement time. The unit of kappa-max is
\ifelse{html}{\out{s<sup>-1</sup>}}{\eqn{s^{-1}}{ASCII}}.

The function \code{\link[GoFluxYourself]{MDF}} calculates the minimal detectable
flux (MDF) based on instrument precision and measurement time.
}
\examples{
data(example_LGR_manID)
CO2_flux <- goFlux(example_LGR_manID, "CO2dry_ppm")
CH4_flux <- goFlux(example_LGR_manID, "CH4dry_ppb")
H2O_flux <- goFlux(example_LGR_manID, "H2O_ppm")

}
\seealso{
Look up the functions \code{\link[GoFluxYourself]{MDF}},
         \code{\link[GoFluxYourself]{flux.term}},
         \code{\link[GoFluxYourself]{g.factor}},
         \code{\link[GoFluxYourself]{k.max}},
         \code{\link[GoFluxYourself]{HM.flux}} and
         \code{\link[GoFluxYourself]{LM.flux}} of this package for more
         information about these parameters.
}
