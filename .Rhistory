# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI6400_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7810 ####
if(instrument == "LI-7810"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7810_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7820 ####
if(instrument == "LI-7820"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7820_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-8100 ####
if(instrument == "LI-8100"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.81x", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8100_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
# LI-8200 Smart Chamber ####
if(instrument == "LI-8200"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.json", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8200_import(inputfile = file_list[i],
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
}
import2Rdata(path = "inst/extdata/LGR", instrument = "LGR", date.format = "dmy")
import2Rdata(path = "inst/extdata/LGR", instrument = "LGR", date.format = "dmy")
setwd("I:/SCIENCE-IGN-ALL-Climaite-metdata/GoFluxYourself (Standardized R scripts)")
import2Rdata(path = "test files/LGR", instrument = "LGR", date.format = "dmy")
#' import2Rdata(path = "inst/extdata/LI6400", instrument = "LI-6400", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI7810", instrument = "LI-7810", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI7820", instrument = "LI-7820", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI8100", instrument = "LI-8100", date.format = "ymd")
#'
#' # with the LI-COR smart chamber (LI-8200)
#' # with this instrument, date.format is not a useful parameter.
#' import2Rdata(path = "inst/extdata/LI8200", instrument = "LI-8200")
#' @export
#'
import2Rdata <- function(path, instrument, date.format, timezone = "UTC"){
# Progress bar options
pboptions(char = "=")
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Los Gatos Research ####
if(instrument == "LGR"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.txt", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LGR_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# GAIA ####
if(instrument == "GAIA"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.csv", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
GAIA_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# G2508 ####
if(instrument == "G2508"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.dat", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
G2508_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-6400 ####
if(instrument == "LI-6400"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.txt", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI6400_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7810 ####
if(instrument == "LI-7810"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7810_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7820 ####
if(instrument == "LI-7820"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7820_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-8100 ####
if(instrument == "LI-8100"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.81x", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8100_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
# LI-8200 Smart Chamber ####
if(instrument == "LI-8200"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.json", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8200_import(inputfile = file_list[i],
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
}
import2Rdata(path = "test files/LGR", instrument = "LGR", date.format = "dmy")
#' import2Rdata(path = "inst/extdata/LI6400", instrument = "LI-6400", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI7810", instrument = "LI-7810", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI7820", instrument = "LI-7820", date.format = "ymd")
#' import2Rdata(path = "inst/extdata/LI8100", instrument = "LI-8100", date.format = "ymd")
#'
#' # with the LI-COR smart chamber (LI-8200)
#' # with this instrument, date.format is not a useful parameter.
#' import2Rdata(path = "inst/extdata/LI8200", instrument = "LI-8200")
#' @export
#'
import2Rdata <- function(path, instrument, date.format, timezone = "UTC"){
# Progress bar options
pboptions(char = "=")
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Los Gatos Research ####
if(instrument == "LGR"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.txt", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LGR_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
}
# GAIA ####
if(instrument == "GAIA"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.csv", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
GAIA_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# G2508 ####
if(instrument == "G2508"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.dat", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
G2508_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-6400 ####
if(instrument == "LI-6400"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.txt", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI6400_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7810 ####
if(instrument == "LI-7810"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Catch errors and messages from import function to print after progress bar
errs <- character(0)
msgs <- character(0)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7810_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-7820 ####
if(instrument == "LI-7820"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.data", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
withCallingHandlers(
LI7820_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE),
error = function(e){
errs <<- c(errs, message(
paste("Error occurred in file", file_list[[i]],":\n"), e))
},
message = function(m){
msgs <<- c(msgs, conditionMessage(m))
invokeRestart("muffleMessage")
})
})
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
# LI-8100 ####
if(instrument == "LI-8100"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.81x", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8100_import(inputfile = file_list[i],
date.format = date.format,
timezone = timezone,
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
# LI-8200 Smart Chamber ####
if(instrument == "LI-8200"){
# List all the files contained in the specified path
file_list <- list.files(path = path, pattern = "\\.json", full.names = TRUE)
# Loop through files in "file_list" and apply import functions
pblapply(seq_along(file_list), function(i) {
tryCatch(supress_message(
LI8200_import(inputfile = file_list[i],
save = TRUE)),
error = function(e){
message(paste("Error occurred in file", file_list[[i]],":\n"), e)})
})
}
# Print errors and messages after progress bar
errs <- trimws(errs); for (e in errs) warning(e, call. = F)
msgs <- trimws(msgs); for (m in msgs) message(m)
}
import2Rdata(path = "test files/LGR", instrument = "LGR", date.format = "dmy")
import2Rdata(path = "test files/LGR", instrument = "LGR", date.format = "dmy")
